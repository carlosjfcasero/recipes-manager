swagger: "2.0"
info:
  title: Recipes Manager API
  description: |
    Recipes Manager API provides an interface to do management operations regarding recipes, such as list them, save 
    new ones or update and delete an existing one.
  version: 0.1.0
  contact:
    email: carlosjfcasero@gmail.com
  license:
    name: MIT
    url: 'http://opensource.org/licenses/MIT'
host: cjfc.ignorelist.com
basePath: /recipes-manager
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/recipes:
    get:
      summary: Endpoint to list recipes
      description: "List all recipes showing id and name"
      operationId: list-recipes
      tags:
        - read
      responses:
        '200':
          description: OK - The recipe list has been sucessfully retrieved
          schema:
            $ref: '#/definitions/recipes'
        '500':
          description: Internal Server Error - Something went wrong on the server, check status site and/or report the issue. There's no need to really specify this any further (other than 503 below) as the client is powerless in fixing the condition that caused the error
          schema:
            $ref: '#/definitions/recipesManagerError'
        '503':
          description: Service Unavailable - The API is temporarily unavailable. This is the only 500 code that allows for the client to try and remedy the condition (i.e. by retrying)
          schema:
            $ref: '#/definitions/recipesManagerError'
    post:
      summary: Endpoint to create a new recipe
      description: "Create a new recipe with the provided details"
      operationId: create-recipe
      tags:
        - create
      responses:
        '200':
          description: OK - The recipe has been sucessfully created
          schema:
            $ref: '#/definitions/recipe'
        '500':
          description: Internal Server Error - Something went wrong on the server, check status site and/or report the issue. There's no need to really specify this any further (other than 503 below) as the client is powerless in fixing the condition that caused the error
          schema:
            $ref: '#/definitions/recipesManagerError'
        '503':
          description: Service Unavailable - The API is temporarily unavailable. This is the only 500 code that allows for the client to try and remedy the condition (i.e. by retrying)
          schema:
            $ref: '#/definitions/recipesManagerError'
definitions:
  recipesManagerError:
    type: object
    required:
      - error
    properties:
      error:
        type: object
        $ref: '#/definitions/errorDetails'
  errorDetails:
    type: object
    required:
      - code
      - message
      - severity
    properties:
      code:
        type: string
        example: ERROR.CODE
      message:
        type: string
        example: Error message
      severity:
        type: string
        enum:
          - critical
          - error
          - warning
          - info
  recipe:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      favourite:
        type: boolean
      ingredients:
        type: string
      origin:
        type: string
      temperature:
        type: string
      course:
        type: string
      tags:
        type: array
        items:
          type: string
      url:
        type: string
      time:
        type: string
        format: time
        example: 'HH:mm'
  recipes:
    type: object
    required:
      - recipes
    properties:
      recipes:
        type: array
        items:
          $ref: '#/definitions/recipe'